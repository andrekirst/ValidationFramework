<?xml version="1.0" encoding="utf-8"?>
<assemblies timestamp="12/22/2017 18:54:47">
  <assembly name="ValidationFramework.Tests.dll" environment="64-bit .NET Standard [collection-per-class, parallel (8 threads)]" test-framework="xUnit.net 2.3.1.3858" run-date="2017-12-22" run-time="18:54:47" total="71" passed="71" failed="0" skipped="0" time="0.119" errors="0">
    <errors />
    <collection total="3" passed="3" failed="0" skipped="0" name="Test collection for ValidationFramework.Tests.FunctionTests.StringFunctionTests.T_IsNullOrEmpty" time="0.010">
      <test name="TestIsNullOrEmpty(input: null, expectedValue: True)" type="ValidationFramework.Tests.FunctionTests.StringFunctionTests.T_IsNullOrEmpty" method="TestIsNullOrEmpty" time="0.0101267" result="Pass">
        <traits>
          <trait name="Issue" value="5" />
          <trait name="Function" value="IsNullOrEmpty" />
        </traits>
      </test>
      <test name="TestIsNullOrEmpty(input: \&quot;\&quot;, expectedValue: True)" type="ValidationFramework.Tests.FunctionTests.StringFunctionTests.T_IsNullOrEmpty" method="TestIsNullOrEmpty" time="0.0000099" result="Pass">
        <traits>
          <trait name="Issue" value="5" />
          <trait name="Function" value="IsNullOrEmpty" />
        </traits>
      </test>
      <test name="TestIsNullOrEmpty(input: \&quot;a\&quot;, expectedValue: False)" type="ValidationFramework.Tests.FunctionTests.StringFunctionTests.T_IsNullOrEmpty" method="TestIsNullOrEmpty" time="0.0000014" result="Pass">
        <traits>
          <trait name="Issue" value="5" />
          <trait name="Function" value="IsNullOrEmpty" />
        </traits>
      </test>
    </collection>
    <collection total="5" passed="5" failed="0" skipped="0" name="Test collection for ValidationFramework.Tests.FunctionTests.StringFunctionTests.T_IsEMail" time="0.010">
      <test name="TestIsEMail(input: \&quot;test@test.de\&quot;, expectedValue: True)" type="ValidationFramework.Tests.FunctionTests.StringFunctionTests.T_IsEMail" method="TestIsEMail" time="0.0101001" result="Pass">
        <traits>
          <trait name="Function" value="IsEMail" />
          <trait name="Issue" value="5" />
        </traits>
      </test>
      <test name="TestIsEMail(input: \&quot;testtest.de\&quot;, expectedValue: False)" type="ValidationFramework.Tests.FunctionTests.StringFunctionTests.T_IsEMail" method="TestIsEMail" time="0.0000135" result="Pass">
        <traits>
          <trait name="Function" value="IsEMail" />
          <trait name="Issue" value="5" />
        </traits>
      </test>
      <test name="TestIsEMail(input: \&quot;testtestde\&quot;, expectedValue: False)" type="ValidationFramework.Tests.FunctionTests.StringFunctionTests.T_IsEMail" method="TestIsEMail" time="0.0000055" result="Pass">
        <traits>
          <trait name="Function" value="IsEMail" />
          <trait name="Issue" value="5" />
        </traits>
      </test>
      <test name="TestIsEMail(input: null, expectedValue: False)" type="ValidationFramework.Tests.FunctionTests.StringFunctionTests.T_IsEMail" method="TestIsEMail" time="0.000003" result="Pass">
        <traits>
          <trait name="Function" value="IsEMail" />
          <trait name="Issue" value="5" />
        </traits>
      </test>
      <test name="TestIsEMail(input: \&quot;\&quot;, expectedValue: False)" type="ValidationFramework.Tests.FunctionTests.StringFunctionTests.T_IsEMail" method="TestIsEMail" time="0.0000035" result="Pass">
        <traits>
          <trait name="Function" value="IsEMail" />
          <trait name="Issue" value="5" />
        </traits>
      </test>
    </collection>
    <collection total="3" passed="3" failed="0" skipped="0" name="Test collection for ValidationFramework.Tests.FunctionTests.StringFunctionTests.T_Empty" time="0.010">
      <test name="TestIsEmpty(input: null, expectedValue: False)" type="ValidationFramework.Tests.FunctionTests.StringFunctionTests.T_Empty" method="TestIsEmpty" time="0.0101534" result="Pass">
        <traits>
          <trait name="Issue" value="5" />
          <trait name="Function" value="IsEmpty" />
        </traits>
      </test>
      <test name="TestIsEmpty(input: \&quot;\&quot;, expectedValue: True)" type="ValidationFramework.Tests.FunctionTests.StringFunctionTests.T_Empty" method="TestIsEmpty" time="0.0000114" result="Pass">
        <traits>
          <trait name="Issue" value="5" />
          <trait name="Function" value="IsEmpty" />
        </traits>
      </test>
      <test name="TestIsEmpty(input: \&quot;a\&quot;, expectedValue: False)" type="ValidationFramework.Tests.FunctionTests.StringFunctionTests.T_Empty" method="TestIsEmpty" time="0.000004" result="Pass">
        <traits>
          <trait name="Issue" value="5" />
          <trait name="Function" value="IsEmpty" />
        </traits>
      </test>
    </collection>
    <collection total="10" passed="10" failed="0" skipped="0" name="Test collection for ValidationFramework.Tests.FunctionTests.StringFunctionTests.T_IsIPv4Address" time="0.010">
      <test name="TestIsIPv4Address(input: \&quot;192.168.0.1\&quot;, expectedValue: True)" type="ValidationFramework.Tests.FunctionTests.StringFunctionTests.T_IsIPv4Address" method="TestIsIPv4Address" time="0.0101019" result="Pass">
        <traits>
          <trait name="Function" value="IsIPv4Address" />
          <trait name="Issue" value="5" />
        </traits>
      </test>
      <test name="TestIsIPv4Address(input: \&quot;192.168.00.01\&quot;, expectedValue: True)" type="ValidationFramework.Tests.FunctionTests.StringFunctionTests.T_IsIPv4Address" method="TestIsIPv4Address" time="0.0000459" result="Pass">
        <traits>
          <trait name="Function" value="IsIPv4Address" />
          <trait name="Issue" value="5" />
        </traits>
      </test>
      <test name="TestIsIPv4Address(input: \&quot;192.168.000.001\&quot;, expectedValue: True)" type="ValidationFramework.Tests.FunctionTests.StringFunctionTests.T_IsIPv4Address" method="TestIsIPv4Address" time="0.0000215" result="Pass">
        <traits>
          <trait name="Function" value="IsIPv4Address" />
          <trait name="Issue" value="5" />
        </traits>
      </test>
      <test name="TestIsIPv4Address(input: \&quot;192168000001\&quot;, expectedValue: False)" type="ValidationFramework.Tests.FunctionTests.StringFunctionTests.T_IsIPv4Address" method="TestIsIPv4Address" time="0.0000066" result="Pass">
        <traits>
          <trait name="Function" value="IsIPv4Address" />
          <trait name="Issue" value="5" />
        </traits>
      </test>
      <test name="TestIsIPv4Address(input: \&quot;a\&quot;, expectedValue: False)" type="ValidationFramework.Tests.FunctionTests.StringFunctionTests.T_IsIPv4Address" method="TestIsIPv4Address" time="0.0000045" result="Pass">
        <traits>
          <trait name="Function" value="IsIPv4Address" />
          <trait name="Issue" value="5" />
        </traits>
      </test>
      <test name="TestIsIPv4Address(input: \&quot;192-168-0-1\&quot;, expectedValue: False)" type="ValidationFramework.Tests.FunctionTests.StringFunctionTests.T_IsIPv4Address" method="TestIsIPv4Address" time="0.0000042" result="Pass">
        <traits>
          <trait name="Function" value="IsIPv4Address" />
          <trait name="Issue" value="5" />
        </traits>
      </test>
      <test name="TestIsIPv4Address(input: \&quot;192,168,0,1\&quot;, expectedValue: False)" type="ValidationFramework.Tests.FunctionTests.StringFunctionTests.T_IsIPv4Address" method="TestIsIPv4Address" time="0.0000045" result="Pass">
        <traits>
          <trait name="Function" value="IsIPv4Address" />
          <trait name="Issue" value="5" />
        </traits>
      </test>
      <test name="TestIsIPv4Address(input: \&quot;192.168.0.1a\&quot;, expectedValue: False)" type="ValidationFramework.Tests.FunctionTests.StringFunctionTests.T_IsIPv4Address" method="TestIsIPv4Address" time="0.0000052" result="Pass">
        <traits>
          <trait name="Function" value="IsIPv4Address" />
          <trait name="Issue" value="5" />
        </traits>
      </test>
      <test name="TestIsIPv4Address(input: null, expectedValue: False)" type="ValidationFramework.Tests.FunctionTests.StringFunctionTests.T_IsIPv4Address" method="TestIsIPv4Address" time="0.0000022" result="Pass">
        <traits>
          <trait name="Function" value="IsIPv4Address" />
          <trait name="Issue" value="5" />
        </traits>
      </test>
      <test name="TestIsIPv4Address(input: \&quot;\&quot;, expectedValue: False)" type="ValidationFramework.Tests.FunctionTests.StringFunctionTests.T_IsIPv4Address" method="TestIsIPv4Address" time="0.000002" result="Pass">
        <traits>
          <trait name="Function" value="IsIPv4Address" />
          <trait name="Issue" value="5" />
        </traits>
      </test>
    </collection>
    <collection total="15" passed="15" failed="0" skipped="0" name="Test collection for ValidationFramework.Tests.FunctionTests.StringFunctionTests.T_IsIPv6Address" time="0.011">
      <test name="TestIsIPv6Address(input: \&quot;FE80:0000:0000:0000:0202:B3FF:FE1E:8329\&quot;, expectedValue: True)" type="ValidationFramework.Tests.FunctionTests.StringFunctionTests.T_IsIPv6Address" method="TestIsIPv6Address" time="0.0102696" result="Pass">
        <traits>
          <trait name="Function" value="IsIPv4Address" />
          <trait name="Issue" value="5" />
        </traits>
      </test>
      <test name="TestIsIPv6Address(input: \&quot;FE80::0202:B3FF:FE1E:8329\&quot;, expectedValue: True)" type="ValidationFramework.Tests.FunctionTests.StringFunctionTests.T_IsIPv6Address" method="TestIsIPv6Address" time="0.0000262" result="Pass">
        <traits>
          <trait name="Function" value="IsIPv4Address" />
          <trait name="Issue" value="5" />
        </traits>
      </test>
      <test name="TestIsIPv6Address(input: \&quot;2001:cdba:0000:0000:0000:0000:3257:9652\&quot;, expectedValue: True)" type="ValidationFramework.Tests.FunctionTests.StringFunctionTests.T_IsIPv6Address" method="TestIsIPv6Address" time="0.0000069" result="Pass">
        <traits>
          <trait name="Function" value="IsIPv4Address" />
          <trait name="Issue" value="5" />
        </traits>
      </test>
      <test name="TestIsIPv6Address(input: \&quot;2001:cdba:0:0:0:0:3257:9652\&quot;, expectedValue: True)" type="ValidationFramework.Tests.FunctionTests.StringFunctionTests.T_IsIPv6Address" method="TestIsIPv6Address" time="0.0000035" result="Pass">
        <traits>
          <trait name="Function" value="IsIPv4Address" />
          <trait name="Issue" value="5" />
        </traits>
      </test>
      <test name="TestIsIPv6Address(input: \&quot;2001:cdba::3257:9652\&quot;, expectedValue: True)" type="ValidationFramework.Tests.FunctionTests.StringFunctionTests.T_IsIPv6Address" method="TestIsIPv6Address" time="0.0000055" result="Pass">
        <traits>
          <trait name="Function" value="IsIPv4Address" />
          <trait name="Issue" value="5" />
        </traits>
      </test>
      <test name="TestIsIPv6Address(input: \&quot;192.168.0.1\&quot;, expectedValue: False)" type="ValidationFramework.Tests.FunctionTests.StringFunctionTests.T_IsIPv6Address" method="TestIsIPv6Address" time="0.0000224" result="Pass">
        <traits>
          <trait name="Function" value="IsIPv4Address" />
          <trait name="Issue" value="5" />
        </traits>
      </test>
      <test name="TestIsIPv6Address(input: \&quot;192.168.00.01\&quot;, expectedValue: False)" type="ValidationFramework.Tests.FunctionTests.StringFunctionTests.T_IsIPv6Address" method="TestIsIPv6Address" time="0.000027" result="Pass">
        <traits>
          <trait name="Function" value="IsIPv4Address" />
          <trait name="Issue" value="5" />
        </traits>
      </test>
      <test name="TestIsIPv6Address(input: \&quot;192.168.000.001\&quot;, expectedValue: False)" type="ValidationFramework.Tests.FunctionTests.StringFunctionTests.T_IsIPv6Address" method="TestIsIPv6Address" time="0.0000383" result="Pass">
        <traits>
          <trait name="Function" value="IsIPv4Address" />
          <trait name="Issue" value="5" />
        </traits>
      </test>
      <test name="TestIsIPv6Address(input: \&quot;192168000001\&quot;, expectedValue: False)" type="ValidationFramework.Tests.FunctionTests.StringFunctionTests.T_IsIPv6Address" method="TestIsIPv6Address" time="0.0000363" result="Pass">
        <traits>
          <trait name="Function" value="IsIPv4Address" />
          <trait name="Issue" value="5" />
        </traits>
      </test>
      <test name="TestIsIPv6Address(input: \&quot;a\&quot;, expectedValue: False)" type="ValidationFramework.Tests.FunctionTests.StringFunctionTests.T_IsIPv6Address" method="TestIsIPv6Address" time="0.0000071" result="Pass">
        <traits>
          <trait name="Function" value="IsIPv4Address" />
          <trait name="Issue" value="5" />
        </traits>
      </test>
      <test name="TestIsIPv6Address(input: \&quot;192-168-0-1\&quot;, expectedValue: False)" type="ValidationFramework.Tests.FunctionTests.StringFunctionTests.T_IsIPv6Address" method="TestIsIPv6Address" time="0.000033" result="Pass">
        <traits>
          <trait name="Function" value="IsIPv4Address" />
          <trait name="Issue" value="5" />
        </traits>
      </test>
      <test name="TestIsIPv6Address(input: \&quot;192,168,0,1\&quot;, expectedValue: False)" type="ValidationFramework.Tests.FunctionTests.StringFunctionTests.T_IsIPv6Address" method="TestIsIPv6Address" time="0.0000194" result="Pass">
        <traits>
          <trait name="Function" value="IsIPv4Address" />
          <trait name="Issue" value="5" />
        </traits>
      </test>
      <test name="TestIsIPv6Address(input: \&quot;192.168.0.1a\&quot;, expectedValue: False)" type="ValidationFramework.Tests.FunctionTests.StringFunctionTests.T_IsIPv6Address" method="TestIsIPv6Address" time="0.0000242" result="Pass">
        <traits>
          <trait name="Function" value="IsIPv4Address" />
          <trait name="Issue" value="5" />
        </traits>
      </test>
      <test name="TestIsIPv6Address(input: null, expectedValue: False)" type="ValidationFramework.Tests.FunctionTests.StringFunctionTests.T_IsIPv6Address" method="TestIsIPv6Address" time="0.0000032" result="Pass">
        <traits>
          <trait name="Function" value="IsIPv4Address" />
          <trait name="Issue" value="5" />
        </traits>
      </test>
      <test name="TestIsIPv6Address(input: \&quot;\&quot;, expectedValue: False)" type="ValidationFramework.Tests.FunctionTests.StringFunctionTests.T_IsIPv6Address" method="TestIsIPv6Address" time="0.000003" result="Pass">
        <traits>
          <trait name="Function" value="IsIPv4Address" />
          <trait name="Issue" value="5" />
        </traits>
      </test>
    </collection>
    <collection total="4" passed="4" failed="0" skipped="0" name="Test collection for ValidationFramework.Tests.FunctionTests.StringFunctionTests.T_MatchesRegexp" time="0.013">
      <test name="TestMatchesRegexpData(input: \&quot;a\&quot;, pattern: \&quot;a\&quot;, expectedValue: True)" type="ValidationFramework.Tests.FunctionTests.StringFunctionTests.T_MatchesRegexp" method="TestMatchesRegexpData" time="0.0101733" result="Pass">
        <traits>
          <trait name="Issue" value="5" />
          <trait name="Function" value="MatchesRegexp" />
        </traits>
      </test>
      <test name="TestMatchesRegexpData(input: \&quot;0\&quot;, pattern: \&quot;a\&quot;, expectedValue: False)" type="ValidationFramework.Tests.FunctionTests.StringFunctionTests.T_MatchesRegexp" method="TestMatchesRegexpData" time="0.0000193" result="Pass">
        <traits>
          <trait name="Issue" value="5" />
          <trait name="Function" value="MatchesRegexp" />
        </traits>
      </test>
      <test name="TestMatchesRegexpPatternIsNullExpectArgumentNullException" type="ValidationFramework.Tests.FunctionTests.StringFunctionTests.T_MatchesRegexp" method="TestMatchesRegexpPatternIsNullExpectArgumentNullException" time="0.0020707" result="Pass">
        <traits>
          <trait name="Issue" value="5" />
          <trait name="Function" value="MatchesRegexp" />
        </traits>
      </test>
      <test name="TestMatchesRegexpValueIsNullExpectArgumentNullException" type="ValidationFramework.Tests.FunctionTests.StringFunctionTests.T_MatchesRegexp" method="TestMatchesRegexpValueIsNullExpectArgumentNullException" time="0.0006342" result="Pass">
        <traits>
          <trait name="Issue" value="5" />
          <trait name="Function" value="MatchesRegexp" />
        </traits>
      </test>
    </collection>
    <collection total="8" passed="8" failed="0" skipped="0" name="Test collection for ValidationFramework.Tests.T_ValidatorExtensions" time="0.019">
      <test name="TestFluentDesignEnableReturnOnlyErrors" type="ValidationFramework.Tests.T_ValidatorExtensions" method="TestFluentDesignEnableReturnOnlyErrors" time="0.0102883" result="Pass">
        <traits>
          <trait name="Issue" value="6" />
          <trait name="Function" value="EnableReturnOnlyErrors" />
        </traits>
      </test>
      <test name="TestFluentDesignEnableCaching" type="ValidationFramework.Tests.T_ValidatorExtensions" method="TestFluentDesignEnableCaching" time="0.0005363" result="Pass">
        <traits>
          <trait name="Issue" value="6" />
          <trait name="Function" value="EnableCaching" />
        </traits>
      </test>
      <test name="TestIsAllValid_0_Error_Expect_True" type="ValidationFramework.Tests.T_ValidatorExtensions" method="TestIsAllValid_0_Error_Expect_True" time="0.0040816" result="Pass">
        <traits>
          <trait name="Issue" value="10" />
          <trait name="Function" value="IsAllValid" />
        </traits>
      </test>
      <test name="TestFluentDesignDisableCaching" type="ValidationFramework.Tests.T_ValidatorExtensions" method="TestFluentDesignDisableCaching" time="0.0003278" result="Pass">
        <traits>
          <trait name="Issue" value="6" />
          <trait name="Function" value="DisableCaching" />
        </traits>
      </test>
      <test name="TestFluentDesignAdd" type="ValidationFramework.Tests.T_ValidatorExtensions" method="TestFluentDesignAdd" time="0.0024063" result="Pass">
        <traits>
          <trait name="Issue" value="6" />
          <trait name="Function" value="Add" />
        </traits>
      </test>
      <test name="TestFluentDesignDisableReturnOnlyErrors" type="ValidationFramework.Tests.T_ValidatorExtensions" method="TestFluentDesignDisableReturnOnlyErrors" time="0.000321" result="Pass">
        <traits>
          <trait name="Issue" value="6" />
          <trait name="Function" value="DisableReturnOnlyErrors" />
        </traits>
      </test>
      <test name="TestFluentDesignAddIEnumerable" type="ValidationFramework.Tests.T_ValidatorExtensions" method="TestFluentDesignAddIEnumerable" time="0.0004113" result="Pass">
        <traits>
          <trait name="Issue" value="6" />
          <trait name="Function" value="Add" />
        </traits>
      </test>
      <test name="TestIsAllValid_2_Error_Expect_False" type="ValidationFramework.Tests.T_ValidatorExtensions" method="TestIsAllValid_2_Error_Expect_False" time="0.0005979" result="Pass">
        <traits>
          <trait name="Issue" value="10" />
          <trait name="Function" value="IsAllValid" />
        </traits>
      </test>
    </collection>
    <collection total="8" passed="8" failed="0" skipped="0" name="Test collection for ValidationFramework.Tests.T_Validation_ReturnOnlyErrors" time="0.019">
      <test name="Test_ReturnOnlyErrors_2_Validierungen(returnOnlyError: True, enableCaching: False, inputValue: 3, expectedCount: 1)" type="ValidationFramework.Tests.T_Validation_ReturnOnlyErrors" method="Test_ReturnOnlyErrors_2_Validierungen" time="0.0137217" result="Pass">
        <traits>
          <trait name="Issue" value="2" />
        </traits>
      </test>
      <test name="Test_ReturnOnlyErrors_2_Validierungen(returnOnlyError: True, enableCaching: True, inputValue: 3, expectedCount: 1)" type="ValidationFramework.Tests.T_Validation_ReturnOnlyErrors" method="Test_ReturnOnlyErrors_2_Validierungen" time="0.0048375" result="Pass">
        <traits>
          <trait name="Issue" value="2" />
        </traits>
      </test>
      <test name="Test_ReturnOnlyErrors_2_Validierungen(returnOnlyError: False, enableCaching: False, inputValue: 3, expectedCount: 2)" type="ValidationFramework.Tests.T_Validation_ReturnOnlyErrors" method="Test_ReturnOnlyErrors_2_Validierungen" time="0.0000155" result="Pass">
        <traits>
          <trait name="Issue" value="2" />
        </traits>
      </test>
      <test name="Test_ReturnOnlyErrors_2_Validierungen(returnOnlyError: False, enableCaching: True, inputValue: 3, expectedCount: 2)" type="ValidationFramework.Tests.T_Validation_ReturnOnlyErrors" method="Test_ReturnOnlyErrors_2_Validierungen" time="0.0000129" result="Pass">
        <traits>
          <trait name="Issue" value="2" />
        </traits>
      </test>
      <test name="Test_ReturnOnlyErrors_2_Validierungen(returnOnlyError: True, enableCaching: False, inputValue: 6, expectedCount: 2)" type="ValidationFramework.Tests.T_Validation_ReturnOnlyErrors" method="Test_ReturnOnlyErrors_2_Validierungen" time="0.000004" result="Pass">
        <traits>
          <trait name="Issue" value="2" />
        </traits>
      </test>
      <test name="Test_ReturnOnlyErrors_2_Validierungen(returnOnlyError: True, enableCaching: True, inputValue: 6, expectedCount: 2)" type="ValidationFramework.Tests.T_Validation_ReturnOnlyErrors" method="Test_ReturnOnlyErrors_2_Validierungen" time="0.0000063" result="Pass">
        <traits>
          <trait name="Issue" value="2" />
        </traits>
      </test>
      <test name="Test_ReturnOnlyErrors_2_Validierungen(returnOnlyError: False, enableCaching: False, inputValue: 6, expectedCount: 2)" type="ValidationFramework.Tests.T_Validation_ReturnOnlyErrors" method="Test_ReturnOnlyErrors_2_Validierungen" time="0.0000032" result="Pass">
        <traits>
          <trait name="Issue" value="2" />
        </traits>
      </test>
      <test name="Test_ReturnOnlyErrors_2_Validierungen(returnOnlyError: False, enableCaching: True, inputValue: 6, expectedCount: 2)" type="ValidationFramework.Tests.T_Validation_ReturnOnlyErrors" method="Test_ReturnOnlyErrors_2_Validierungen" time="0.0000058" result="Pass">
        <traits>
          <trait name="Issue" value="2" />
        </traits>
      </test>
    </collection>
    <collection total="2" passed="2" failed="0" skipped="0" name="Test collection for ValidationFramework.Tests.FunctionTests.ListFunctionTests.T_In" time="0.003">
      <test name="TestTestBetween_4_In_1_2_3_Erwarte_False" type="ValidationFramework.Tests.FunctionTests.ListFunctionTests.T_In" method="TestTestBetween_4_In_1_2_3_Erwarte_False" time="0.0027286" result="Pass">
        <traits>
          <trait name="Function" value="In" />
          <trait name="Issue" value="5" />
        </traits>
      </test>
      <test name="TestTestBetween_2_In_1_2_3_Erwarte_True" type="ValidationFramework.Tests.FunctionTests.ListFunctionTests.T_In" method="TestTestBetween_2_In_1_2_3_Erwarte_True" time="0.0001853" result="Pass">
        <traits>
          <trait name="Function" value="In" />
          <trait name="Issue" value="5" />
        </traits>
      </test>
    </collection>
    <collection total="5" passed="5" failed="0" skipped="0" name="Test collection for ValidationFramework.Tests.FunctionTests.StringFunctionTests.T_IsGuid" time="0.000">
      <test name="TestIsGuid(input: null, expectedValue: False)" type="ValidationFramework.Tests.FunctionTests.StringFunctionTests.T_IsGuid" method="TestIsGuid" time="0.0003952" result="Pass">
        <traits>
          <trait name="Function" value="IsGuid" />
          <trait name="Issue" value="5" />
        </traits>
      </test>
      <test name="TestIsGuid(input: \&quot;\&quot;, expectedValue: False)" type="ValidationFramework.Tests.FunctionTests.StringFunctionTests.T_IsGuid" method="TestIsGuid" time="0.0000104" result="Pass">
        <traits>
          <trait name="Function" value="IsGuid" />
          <trait name="Issue" value="5" />
        </traits>
      </test>
      <test name="TestIsGuid(input: \&quot;d1883abb-bdf6-4515-bb14-55376c6cca70\&quot;, expectedValue: True)" type="ValidationFramework.Tests.FunctionTests.StringFunctionTests.T_IsGuid" method="TestIsGuid" time="0.0000048" result="Pass">
        <traits>
          <trait name="Function" value="IsGuid" />
          <trait name="Issue" value="5" />
        </traits>
      </test>
      <test name="TestIsGuid(input: \&quot;EF9E7864-BBAD-4F3B-A658-64FBC443C7FC\&quot;, expectedValue: True)" type="ValidationFramework.Tests.FunctionTests.StringFunctionTests.T_IsGuid" method="TestIsGuid" time="0.0000032" result="Pass">
        <traits>
          <trait name="Function" value="IsGuid" />
          <trait name="Issue" value="5" />
        </traits>
      </test>
      <test name="TestIsGuid(input: \&quot;{EF9E7864-BBAD-4F3B-A658-64FBC443C7FC}\&quot;, expectedValue: True)" type="ValidationFramework.Tests.FunctionTests.StringFunctionTests.T_IsGuid" method="TestIsGuid" time="0.0000032" result="Pass">
        <traits>
          <trait name="Function" value="IsGuid" />
          <trait name="Issue" value="5" />
        </traits>
      </test>
    </collection>
    <collection total="8" passed="8" failed="0" skipped="0" name="Test collection for ValidationFramework.Tests.FunctionTests.RangeFunctionTests.T_Between" time="0.001">
      <test name="TestBetweenInt(input: 3, start: 2, end: 4, expectedValue: True)" type="ValidationFramework.Tests.FunctionTests.RangeFunctionTests.T_Between" method="TestBetweenInt" time="0.0004049" result="Pass">
        <traits>
          <trait name="Function" value="Between" />
          <trait name="Issue" value="5" />
        </traits>
      </test>
      <test name="TestBetweenInt(input: 5, start: 2, end: 4, expectedValue: False)" type="ValidationFramework.Tests.FunctionTests.RangeFunctionTests.T_Between" method="TestBetweenInt" time="0.0000106" result="Pass">
        <traits>
          <trait name="Function" value="Between" />
          <trait name="Issue" value="5" />
        </traits>
      </test>
      <test name="TestBetweenDouble(input: 3, start: 2, end: 4, expectedValue: True)" type="ValidationFramework.Tests.FunctionTests.RangeFunctionTests.T_Between" method="TestBetweenDouble" time="0.0003455" result="Pass">
        <traits>
          <trait name="Function" value="Between" />
          <trait name="Issue" value="5" />
        </traits>
      </test>
      <test name="TestBetweenDouble(input: 5, start: 2, end: 4, expectedValue: False)" type="ValidationFramework.Tests.FunctionTests.RangeFunctionTests.T_Between" method="TestBetweenDouble" time="0.0000071" result="Pass">
        <traits>
          <trait name="Function" value="Between" />
          <trait name="Issue" value="5" />
        </traits>
      </test>
      <test name="TestBetweenFloat(input: 3, start: 2, end: 4, expectedValue: True)" type="ValidationFramework.Tests.FunctionTests.RangeFunctionTests.T_Between" method="TestBetweenFloat" time="0.0002708" result="Pass">
        <traits>
          <trait name="Function" value="Between" />
          <trait name="Issue" value="5" />
        </traits>
      </test>
      <test name="TestBetweenFloat(input: 5, start: 2, end: 4, expectedValue: False)" type="ValidationFramework.Tests.FunctionTests.RangeFunctionTests.T_Between" method="TestBetweenFloat" time="0.0000068" result="Pass">
        <traits>
          <trait name="Function" value="Between" />
          <trait name="Issue" value="5" />
        </traits>
      </test>
      <test name="TestBetweenDateTime(input: 2017-12-12T00:00:00.0000000, start: 2017-01-01T00:00:00.0000000, end: 2017-12-31T00:00:00.0000000, expectedValue: True)" type="ValidationFramework.Tests.FunctionTests.RangeFunctionTests.T_Between" method="TestBetweenDateTime" time="0.000237" result="Pass">
        <traits>
          <trait name="Function" value="Between" />
          <trait name="Issue" value="5" />
        </traits>
      </test>
      <test name="TestBetweenDateTime(input: 2017-12-12T00:00:00.0000000, start: 2017-01-01T00:00:00.0000000, end: 2017-11-11T00:00:00.0000000, expectedValue: False)" type="ValidationFramework.Tests.FunctionTests.RangeFunctionTests.T_Between" method="TestBetweenDateTime" time="0.0000152" result="Pass">
        <traits>
          <trait name="Function" value="Between" />
          <trait name="Issue" value="5" />
        </traits>
      </test>
    </collection>
  </assembly>
</assemblies>